
;			14.1	端口的读写

;在访问端口的时候，CPU通过端口地址来定位端口。因为端口所在的芯片和CPU通过总线相连，所以
;端口地址和内存地址一样，通过地址总线来传送。在PC系统中，CPU最多可以定位64KB个不同的端口
;则端口地址的范围为0~65535.

;对端口的读写不能用mov、push、pop等内存读写指令。端口的读写指令只有两条：in和out，分别
;用于从端口读取数据和往端口写入数据


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;我们看一下CPU执行内存访问指令和端口访问指令时候，总线上的信息：

;(1)访问内存：	mov ax,ds:[8]	;假设执行前(ds)=0

;执行时与总线相关的操作如下所示：
;1.CPU通过地址线将地址信息8发出
;2.CPU通过控制线发出内存读命令，选中存储器芯片，并通知它，将要从中读取数据
;3.存储器将8号单元中的数据通过数据线送入CPU
;.....................................................................................

;(2)访问端口：	in al,60h		;从60h号端口读入一个字节

;执行时与总线相关的操作如下：
;1.CPU通过地址线将地址信息60h发出
;2.CPU通过控制线发出端口读命令，选中端口所在的芯片，并通知它，将要从中读取数据
;3.端口所在的芯片将60h端口中的数据通过数据线送入CPU

;注意：在in和out指令中，只能使用ax或al来存放从端口中读入的数据或要发送到端口中的数据。
;访问8位端口时用al，访问16位端口时用ax。

;对0~255以内的端口进行读写时：
in al,20h			;从20h端口读入一个字节
out 20h，al			;往20h端口写入一个字节

;对256~65535的端口进行读写时，端口号放在ax中：(266 (278 / 354)pdf不懂有没有出错，写的是dx)
mov ax,3f8h			;将端口号3f8h送入ax
in al,ax			;从3f8h端口读入一个字节
out ax,al			;向3f8h端口写入一个字节
