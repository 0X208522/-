
;		15_4(1)	编写int 9中断例程

;键盘输入到达60h端口后，就会引发9号中断，CPU则转去执行int 9中断例程。我们可以编写int 9
;中断例程，功能如下：
;(1)从60h端口读出键盘的输入
;(2)调用BIOS的int 9中断例程，处理其他硬件细节
;(3)判断是否为Esc的扫描码，如果是，改变显示的颜色后返回；如果不是则直接返回。

;下面对这些功能的实现一一进行分析
:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

;1.从端口60h读出键盘的输入
;in al,60h

::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

;2.调用BIOS的int 9中断例程
;我们写的中断处理程序要成为新的int 9中断例程，主程序必须要将中断向量表中的int 9中断例程
;的入口地址改为我们写的中断处理程序的入口地址。则在新的中断处理程序中调用原来的int 9中
;断例程时，中断向量表中的int 9中断例程的入口地址却不是原来的int 9中断例程的地址。所以
;不能使用int 指令直接调用。
;要能在我们写的新中断例程中调用原来的中断例程，就必须在将中断向量表中的中断例程的入口
;地址改为新地址之前，将原来的入口地址保存起来。这样，在需要调用的时候，我们才能找到原
;来的中断例程的入口。

;对于我们现在的问题，假设将原来int 9中断例程的偏移地址和段地址保存在ds:[0]和ds:[2]单元
;中。那么我们在需要调用原来的int 9中断例程时候，就可以在ds:[0]、ds:[2]单元中找到它的
;入口地址

;那么，有了入口地址后，如何进行调用呢？
;当然不能使用指令int 9来调用。我们可以用别的指令来对int指令进行一些模拟，从而实现对中断
;例程的调用。

;我们来看，int指令在执行的时候，CPU进行下面的工作：
;(1)取中断类型码n
;(2)标志寄存器入栈
;(3)IF=0,TF=0
;(4)CS、IP入栈
;(5)(IP)=(n*4),(CS)=(n*4+2)

;因为中断类型码已经知道。所以，我们用别的指令模拟int指令时候，不需要做第(1)步。在假设
;要调用的中断例程的入口地址在ds:0和ds:2单元的前提下，我们将int过程用下面几步模拟：
;(1)标志寄存器入栈
;(2)IF=0,TF=0
;(3)CS、IP入栈
;(4)(IP)=((ds)*16+0),(CS)=((ds)*16+2)
;可以注意到第(3)、(4)步和call dword ptr ds:[0]的功能一样，call dword ptr ds:[0]
;的功能也是：
;(1)CS、IP入栈
;(2)(IP)=((ds)*16+0),(CS)=((ds)*16+2)

;所以int 过程的模拟过程变为：
;(1)标志寄存器入栈
;(2)IF=0,TF=0
;(3)call dword ptr ds:[0]

;对于（1），可用pushf实现
;对于（2），可用下面指令：
pushf
pop ax
and ah,11111100b		;IF和TF为标志寄存器的第9位和第8位
push ax
popf

;则模拟int指令的调用功能，调用入口地址在ds:0、ds:2中的中断例程的程序为：
pushf			;标志寄存器入栈

pushf
pop ax
and ah,11111100b
push ax
popf			;IF=0,TF=0

call dword ptr ds:[0]	;CS、IP入栈；(IP)=((ds)*16+0),(CS)=((ds)*16+2)

::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

;3.如果是Esc的扫描码，改变显示的颜色后返回
;如何改变显示的颜色？

;显示的位置是屏幕的中间，即第12行40列，显存中的偏移地址为：160*12+40*2.
;所以字符的ASCII码要送入段地址b800h，偏移地址160*12+40*2处。而段地址b800h，偏移地址
;160*12+40*2+1处是字符的属性，只要改变此处的数据就可以改变段地址b800h，偏移地址
;160*12+40*2处显示的字符的颜色了

;该程序的最后一个问题是，要在程序返回前，将中断向量表中的int 9中断例程的入口地址恢复
;为原来的地址。否则程序返回后，别的程序将无法使用键盘。

